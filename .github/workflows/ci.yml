name: Continuous integration

on:
  pull_request:
  push:
    branches:
      - main

permissions:
  contents: read
  id-token: write

jobs:
  build-cred-provider:
    name: Build credential provider
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Publish credential provider
        run: dotnet publish src/CredentialProvider --configuration Release --no-build --output src/CredentialProvider/bin/publish

      - uses: actions/upload-artifact@v4
        name: Upload credential provider
        with:
          name: NuGet.TokenCredentialProvider
          path: src/CredentialProvider/bin/publish

  gha-test:
    name: GitHub Actions test
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Local action - no install, before
        id: no-install-before
        uses: ./
        with:
          package-source: https://api.nuget.org/v3/index.json
          username: nuget
          install-cred-provider: false

      - name: Verify no cred-provider-dir output
        shell: pwsh
        run: |
          if ("${{ steps.no-install-before.outputs.cred-provider-dir }}") {
            Write-Error "The 'cred-provider-dir' output should not have a value."
            exit 1
          }

      - name: Local action
        id: token-login
        uses: ./
        with:
          package-source: https://api.nuget.org/v3/index.json
          username: nuget
          install-cred-provider: true
        
      - name: Verify cred-provider-dir output
        shell: pwsh
        run: |
          if (-not "${{ steps.token-login.outputs.cred-provider-dir }}") {
            Write-Error "The 'cred-provider-dir' output should have a value."
            exit 1
          }

      - name: Local action - no install, after
        id: no-install-after
        uses: ./
        with:
          package-source: https://api.nuget.org/v3/index.json
          username: nuget
          install-cred-provider: false
        
      - name: Verify cred-provider-dir output
        shell: pwsh
        run: |
          if (-not "${{ steps.no-install-after.outputs.cred-provider-dir }}") {
            Write-Error "The 'cred-provider-dir' output should have a value."
            exit 1
          }

      - name: Show output
        run: $env:NUGET_TOKEN_INFO | jq .
        shell: pwsh
        env:
          NUGET_TOKEN_INFO: ${{ steps.token-login.outputs.token-info }}

  node-test:
    name: Node.js test
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: npm

      - name: Restore dependencies
        run: npm ci

      - name: Test
        run: npm run test

  integration-test:
    name: Integration test
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          # Disable Windows until the plugin is signed
          # - windows-latest
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Publish credential provider
        run: dotnet publish src/CredentialProvider --configuration Release --no-build --output src/CredentialProvider/bin/publish

      - name: Pack test package
        run: dotnet pack src/CredentialProvider --configuration Release --no-build --no-restore --output src/CredentialProvider/bin

      - name: Zip credential provider
        shell: bash
        run: |
          cd src/CredentialProvider/bin/publish
          zip -r ../NuGet.TokenCredentialProvider.zip *

      - name: Serve credential provider over HTTP
        shell: bash
        run: |
          dotnet tool install --global dotnet-serve
          dotnet serve --directory src/CredentialProvider/bin --quiet --port 4247 &

      - name: Start test package source
        shell: bash
        run: dotnet run --project test/TestPackageSource &

      - name: Local action
        uses: ./
        id: token-login
        with:
          username: IntegrationTestUser
          package-source: http://127.0.0.1:5247/v3/index.json
          install-cred-provider: true
          cred-provider-url: http://127.0.0.1:4247/NuGet.TokenCredentialProvider.zip

      - name: Show NuGet plugins
        run: find ~/.nuget/plugins -type f | sort
        shell: bash

      - name: Push package
        run: dotnet nuget push src/CredentialProvider/bin/*.nupkg -s http://127.0.0.1:5247/v3/index.json
        env:
          NUGET_TOKEN_INFO: ${{ steps.token-login.outputs.token-info }}
          NUGET_TOKEN_LOG_FILE: NuGet.TokenCredentialProvider.log

      - name: Delete package
        run: dotnet nuget delete NuGet.TokenCredentialProvider 1.0.0 -s http://127.0.0.1:5247/v3/index.json --non-interactive
        env:
          NUGET_TOKEN_INFO: ${{ steps.token-login.outputs.token-info }}
          NUGET_TOKEN_LOG_FILE: NuGet.TokenCredentialProvider.log

      - name: Show credential provider log
        run: cat NuGet.TokenCredentialProvider.log
        if: success() || failure()

  # In TypeScript actions, `dist/` is a special directory. When you reference
  # an action with the `uses:` property, `dist/index.js` is the code that will be
  # run. For this project, the `dist/index.js` file is transpiled from other
  # source files. This workflow ensures the `dist/` directory contains the
  # expected transpiled code.
  #
  # If this workflow is run from a feature branch, it will act as an additional CI
  # check and fail if the checked-in `dist/` directory does not match what is
  # expected from the build.
  check-dist:
    name: Check dist for changes
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build dist/ Directory
        run: npm run bundle

      # This will fail the workflow if the PR wasn't created by Dependabot.
      - name: Compare directories
        id: diff
        run: |
          if [ "$(git diff --ignore-space-at-eol --text dist/ | wc -l)" -gt "0" ]; then
            git diff --ignore-space-at-eol --text dist/
            echo "Detected uncommitted changes after build (see above for diff)."
            echo "::error::Run 'npm run bundle' and commit the changes."
            exit 1
          fi

      # If `dist/` was different than expected, and this was not a Dependabot
      # PR, upload the expected version as a workflow artifact.
      - if: ${{ failure() && steps.diff.outcome == 'failure' }}
        name: Upload dist
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          